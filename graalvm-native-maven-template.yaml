apiVersion: v1
kind: Template
metadata:
  creationTimestamp: null
  name: graalvm-native-maven-template
parameters:
  - name: GIT_REPO
    description: "The git repo to use"
  - name: GIT_BRANCH
    description: "The git repo branch to use"
  - name: APP_NAME
    descriptiom: "The app name used in build config and image stream names"
objects:
- apiVersion: v1
  kind: BuildConfig
  metadata:
    creationTimestamp: null
    name: ${APP_NAME}-pipeline
  spec:
    nodeSelector: {}
    output: {}
    postCommit: {}
    resources: {}
    runPolicy: Serial
    strategy:
      jenkinsPipelineStrategy:
        jenkinsfile: |-
            pipeline {
                agent {
                  node {
                    label 'maven'
                  }
                }
                stages {
                    stage('checkout'){
                        steps{
                          git url: '${GIT_REPO}', branch: '${GIT_BRANCH}'
                        }
                    }
                    stage('build') {
                        steps {
                           sh '''
                             mvn clean package
                          ''' 
                        }
                    } 
                    stage('build image') {
                        steps {
                           sh '''
                             oc start-build ${APP_NAME}-ubuntu --from-dir=. --follow
                          '''
                        }
                    } 
                    stage('scratch image build') {
                        steps {
                           sh '''
                             oc start-build ${APP_NAME}-scratch --from-dir=. --follow
                          '''
                        } 
                    }
                }
            } 
    triggers: []
  status:
    lastVersion: 0
- apiVersion: v1
  kind: BuildConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewBuild
    creationTimestamp: null
    labels:
      build: ${APP_NAME}-scratch
    name: ${APP_NAME}-scratch
  spec:
    failedBuildsHistoryLimit: 5
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: ${APP_NAME}-scratch:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      dockerfile: |-
        FROM scratch
        COPY /target/app /app
        CMD ["/app"]
      images:
      - from:
          kind: ImageStreamTag
          name: ${APP_NAME}-ubuntu:latest
        paths:
        - destinationDir: .
          sourcePath: /target
      type: Git
    strategy:
      dockerStrategy:
        from:
          kind: DockerImage
          name: scratch
      type: Docker
    successfulBuildsHistoryLimit: 5
    triggers:
    - github:
        secret: 3ThIYgvq0CGJ3be_QgFY
      type: GitHub
    - generic:
        secret: W_uXkLseAnD4Y5lgJ31G
      type: Generic
    - imageChange:
        from:
          kind: ImageStreamTag
          name: ${APP_NAME}-ubuntu:latest
      type: ImageChange
    - type: ConfigChange
  status:
    lastVersion: 0
- apiVersion: v1
  kind: BuildConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewBuild
    creationTimestamp: null
    labels:
      build: ${APP_NAME}-ubuntu
    name: ${APP_NAME}-ubuntu
  spec:
    failedBuildsHistoryLimit: 5
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: ${APP_NAME}-ubuntu:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      dockerfile: |-
        FROM petenorth/graal:1.0.0-rc5
        RUN apt-get update && apt-get -y install gcc zlib1g-dev
        COPY target /target/
        WORKDIR /target
        RUN native-image \
              --no-server \
              -H:+ReportUnsupportedElementsAtRuntime \
              --static \
              -jar $(ls *.jar)
        RUN mv $(basename $(ls *.jar) .jar) app
      type: Git
    strategy:
      dockerStrategy:
        from:
          kind: DockerImage
          name: petenorth/graal:1.0.0-rc5
      type: Docker
    successfulBuildsHistoryLimit: 5
    triggers:
    - github:
        secret: tTurd9WzEPp1AuXCADAp
      type: GitHub
    - generic:
        secret: xv8jWihF9JNFWc5qj5Fk
      type: Generic
    - type: ConfigChange
  status:
    lastVersion: 0
- apiVersion: v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewBuild
      openshift.io/image.dockerRepositoryCheck: 2018-08-19T09:30:21Z
    creationTimestamp: null
    generation: 2
    labels:
      build: ${APP_NAME}-scratch
    name: ${APP_NAME}-scratch
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations: null
      from:
        kind: DockerImage
        name: 172.30.1.1:5000/myproject/${APP_NAME}-scratch:latest
      generation: 2
      importPolicy: {}
      name: latest
      referencePolicy:
        type: Source
  status:
    dockerImageRepository: ""
- apiVersion: v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/image.dockerRepositoryCheck: 2018-08-19T09:30:28Z
    creationTimestamp: null
    generation: 2
    name: ${APP_NAME}-ubuntu
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations: null
      from:
        kind: DockerImage
        name: 172.30.1.1:5000/myproject/${APP_NAME}-ubuntu:latest
      generation: 2
      importPolicy: {}
      name: latest
      referencePolicy:
        type: Source
  status:
    dockerImageRepository: ""
